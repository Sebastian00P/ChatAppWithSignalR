@model IEnumerable<ChatAppWithSignalR.ViewModels.Room>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-white">Dostępne Pokoje</h1>

<p>
    <button id="createRoomLink" class="btn-create" onclick="location.href='#';">Stwórz nowy pokój</button>
</p>
<div class="createRoomPartialView" id="createRoom">

</div>
<div class="createRoomPartialView" id="passwordRoom">

</div>
<table class="table">
    <thead>
        <tr>
            <th class="text-white">
                Nazwa pokoju
            </th>
            <th class="text-white"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr>
                <td class="vertical-middle text-white">
                    <div class="flex">
                    @if (item.HasPassword)
                    {
                        <span class="material-symbols-outlined">
                            lock
                        </span>
                    }
                    @Html.DisplayFor(modelItem => item.ChatName)
                    </div>
                </td>
            @if(!item.HasPassword){
                <td class="table-cell text-white text-end">
                    <form asp-action="GetMessages" asp-controller="Room" method="get" class="ml-auto">
                        <input type="hidden" name="roomId" value="@item.Id" />
                        <button type="submit" class="join-button">Dołącz</button>
                    </form>
                </td>
            }else
            {
                <td class="table-cell text-white text-end">
                    <button id="passwordRoomLink" class="join-button" data-id="@item.Id" onclick="location.href='#';">Dołącz</button>
                </td>
            }
        </tr>
}
    </tbody>
</table>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.body.addEventListener("click", function (event) {
            if (event.target.id === "hasPassword") {
                const passSection = document.getElementById("pass-section");
                const passwordInput = document.getElementById("Password");
                const checkbox = event.target;

                checkbox.value = checkbox.checked ? "true" : "false";

                if (passSection && passwordInput) {
                    passSection.hidden = !checkbox.checked;

                    if (checkbox.checked) {
                        passwordInput.setAttribute("required", "required");
                        passwordInput.setAttribute("minlength", "5");
                    } else {
                        passwordInput.removeAttribute("required");
                        passwordInput.removeAttribute("minlength");
                        passwordInput.value = "";
                    }
                }
            }
        });
    });


    document.addEventListener("DOMContentLoaded", function () {
        let isModalLoaded = false;

        document.getElementById("createRoomLink").addEventListener("click", function (e) {
            e.preventDefault();

            if (!isModalLoaded) {
                fetch('@Url.Action("CreatePartialView", "Room")')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Błąd podczas ładowania widoku.");
                        }
                        return response.text();
                    })
                    .then(data => {
                        document.getElementById("createRoom").innerHTML = data;
                        isModalLoaded = true;
                        document.getElementById("createRoom").style.display = 'flex';
                    })
                    .catch(error => {
                        console.error(error);
                        alert("Błąd podczas ładowania widoku.");
                    });
            } else {
                document.getElementById("createRoom").style.display = 'flex';
            }
        });

        window.closeModal = function () {
            document.getElementById("createRoom").style.display = 'none';
        };
    });

    document.addEventListener("DOMContentLoaded", function () {
        let isPassModalLoaded = false;
        let roomId = document.getElementById("passwordRoomLink").getAttribute("data-id");

        document.getElementById("passwordRoomLink").addEventListener("click", function (e) {
            e.preventDefault();

            if (!isPassModalLoaded) {
                const url = `@Url.Action("PasswordPartialView", "Room")?roomId=${roomId}`;

                fetch(url)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Błąd podczas ładowania widoku.");
                        }
                        return response.text();
                    })
                    .then(data => {
                        document.getElementById("passwordRoom").innerHTML = data;
                        isPassModalLoaded = true;
                        document.getElementById("passwordRoom").style.display = 'flex';
                    })
                    .catch(error => {
                        console.error(error);
                        alert("Błąd podczas ładowania widoku.");
                    });
            } else {
                document.getElementById("passwordRoom").style.display = 'flex';
            }
        });

        window.closeModal = function () {
            document.getElementById("passwordRoom").style.display = 'none';
        };
    });

    //passModalErrorHandler

    document.addEventListener("DOMContentLoaded", function () {
        document.body.addEventListener("click", function (event) {
            if (event.target.id === "submitRoomButton") {
                event.preventDefault();

                const form = document.getElementById("joinRoomForm");
                if (!form) return;

                const passwordInput = document.getElementById("passwordInput");
                if (!passwordInput.value.trim()) {
                    alert("Hasło jest wymagane.");
                    return;
                }
                const formData = new FormData(form);
                const url = form.getAttribute("action");

                fetch(url, {
                    method: "POST",
                    headers: {
                        "X-Requested-With": "XMLHttpRequest",
                        "RequestVerificationToken": formData.get("__RequestVerificationToken")
                    },
                    body: formData
                })
                    .then(response => {
                        if (response.statusCode == 400) {
                            alert(error.message);
                        }
                        if (response.redirected) {
                            window.location.href = response.url;
                        } else if (!response.ok) {
                            return response.json().then(error => {
                                throw new Error(error.message || "Błąd podczas próby dołączenia do pokoju.");
                            });
                        }
                    })
                    .catch(error => {
                        alert(error.message);
                    });
            }
        });
    });



    function cancel() {
        document.getElementById('passwordRoom').style.display = 'none';
        document.getElementById("passwordInput").value = "";
    }

</script>

<style>
    
    .createRoomPartialView {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);   
    }

    .btn-create {
        display: inline-block;
        padding: 10px 15px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        text-align: center;
        text-decoration: none;
        font-size: 16px;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }

    .btn-create:hover {
        background-color: #45a049;
    }

    .join-button {
        padding: 8px 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .join-button:hover {
        background-color: #0056b3;
    }

    .table-cell{
        display: table-cell;
    }

    .ml-auto{
        margin-left: auto;
    }

    .vertical-middle{
        vertical-align: middle;
    }
</style>